{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireAppointments.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, addDoc, setDoc, doc, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadDraw() {\n  _s();\n  const {\n    currentTournament\n  } = useTournament();\n  const [matchData, setMatchData] = useState({});\n  const [matchesByTime, setMatchesByTime] = useState({});\n  useEffect(() => {\n    const fetchMatches = async () => {\n      if (!currentTournament) {\n        setMatchesByTime({});\n        return;\n      }\n      try {\n        const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n        const snapshot = await getDocs(matchesCollection);\n        const matches = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n\n        // Group matches by time, formatting time as HH:mm\n        const grouped = matches.reduce((acc, match) => {\n          // Assuming match.time is a timestamp or ISO string\n          let timeStr = \"Unknown Time\";\n          if (match.time) {\n            const date = match.time.toDate ? match.time.toDate() : new Date(match.time);\n            timeStr = date.toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n          }\n          if (!acc[timeStr]) acc[timeStr] = [];\n          acc[timeStr].push(match);\n          return acc;\n        }, {});\n        setMatchesByTime(grouped);\n      } catch (error) {\n        console.error(\"Error fetching matches: \", error);\n        setMatchesByTime({});\n      }\n    };\n    fetchMatches();\n  }, [currentTournament]);\n  const handleUpload = async () => {\n    if (!currentTournament) {\n      alert(\"Please select a tournament first.\");\n      return;\n    }\n    try {\n      const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n      const matchId = matchData.id || \"\"; // assuming matchData has an id field\n      if (matchId) {\n        await setDoc(doc(matchesCollection, matchId), {\n          ...matchData\n        });\n      } else {\n        await addDoc(matchesCollection, {\n          ...matchData\n        });\n      }\n      alert(\"Match uploaded successfully.\");\n    } catch (error) {\n      console.error(\"Error uploading match: \", error);\n      alert(\"Failed to upload match.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), Object.keys(matchesByTime).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white mt-4\",\n      children: \"No matches available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : Object.entries(matchesByTime).map(([timeSlot, matchesAtTime]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold text-white mt-6 mb-2\",\n        children: timeSlot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\",\n        children: matchesAtTime.map(match => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 p-4 rounded shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"font-semibold\",\n              children: [\"Court: \", match.court || \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Division: \", match.division || \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Teams: \", match.teams || \"TBD vs TBD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"italic\",\n              children: [\"Umpire: \", match.umpire || \"Unassigned\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs mt-2\",\n              children: [\"Match ID: \", match.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)\n        }, match.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, timeSlot, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDraw, \"8o4BP87GC8jejo8hRHo5F1JPEqw=\", false, function () {\n  return [useTournament];\n});\n_c = UploadDraw;\nvar _c;\n$RefreshReg$(_c, \"UploadDraw\");","map":{"version":3,"names":["useState","useEffect","collection","addDoc","setDoc","doc","getDocs","db","useTournament","jsxDEV","_jsxDEV","UploadDraw","_s","currentTournament","matchData","setMatchData","matchesByTime","setMatchesByTime","fetchMatches","matchesCollection","snapshot","matches","docs","map","id","data","grouped","reduce","acc","match","timeStr","time","date","toDate","Date","toLocaleTimeString","hour","minute","push","error","console","handleUpload","alert","matchId","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","className","entries","timeSlot","matchesAtTime","court","division","teams","umpire","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireAppointments.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, addDoc, setDoc, doc, getDocs } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\n\nexport default function UploadDraw() {\n  const { currentTournament } = useTournament();\n  const [matchData, setMatchData] = useState({});\n  const [matchesByTime, setMatchesByTime] = useState({});\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      if (!currentTournament) {\n        setMatchesByTime({});\n        return;\n      }\n      try {\n        const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n        const snapshot = await getDocs(matchesCollection);\n        const matches = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n\n        // Group matches by time, formatting time as HH:mm\n        const grouped = matches.reduce((acc, match) => {\n          // Assuming match.time is a timestamp or ISO string\n          let timeStr = \"Unknown Time\";\n          if (match.time) {\n            const date = match.time.toDate ? match.time.toDate() : new Date(match.time);\n            timeStr = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n          }\n          if (!acc[timeStr]) acc[timeStr] = [];\n          acc[timeStr].push(match);\n          return acc;\n        }, {});\n        setMatchesByTime(grouped);\n      } catch (error) {\n        console.error(\"Error fetching matches: \", error);\n        setMatchesByTime({});\n      }\n    };\n\n    fetchMatches();\n  }, [currentTournament]);\n\n  const handleUpload = async () => {\n    if (!currentTournament) {\n      alert(\"Please select a tournament first.\");\n      return;\n    }\n    try {\n      const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n      const matchId = matchData.id || \"\"; // assuming matchData has an id field\n      if (matchId) {\n        await setDoc(doc(matchesCollection, matchId), { ...matchData });\n      } else {\n        await addDoc(matchesCollection, { ...matchData });\n      }\n      alert(\"Match uploaded successfully.\");\n    } catch (error) {\n      console.error(\"Error uploading match: \", error);\n      alert(\"Failed to upload match.\");\n    }\n  };\n\n  return (\n    <div>\n      {/* UI for uploading draw and setting matchData */}\n      <button onClick={handleUpload}>Upload Draw</button>\n\n      {Object.keys(matchesByTime).length === 0 ? (\n        <p className=\"text-white mt-4\">No matches available.</p>\n      ) : (\n        Object.entries(matchesByTime).map(([timeSlot, matchesAtTime]) => (\n          <div key={timeSlot}>\n            <h3 className=\"text-lg font-bold text-white mt-6 mb-2\">{timeSlot}</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {matchesAtTime.map(match => (\n                <div key={match.id} className=\"bg-blue-600 p-4 rounded shadow-md\">\n                  <div className=\"text-white text-sm\">\n                    <p className=\"font-semibold\">Court: {match.court || \"N/A\"}</p>\n                    <p>Division: {match.division || \"N/A\"}</p>\n                    <p>Teams: {match.teams || \"TBD vs TBD\"}</p>\n                    <p className=\"italic\">Umpire: {match.umpire || \"Unassigned\"}</p>\n                    <p className=\"text-xs mt-2\">Match ID: {match.id}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}