{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UploadDraw.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(customParseFormat);\nexport default function UploadDraw() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const {\n    currentTournament\n  } = useTournament();\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Parsing CSV...\");\n    Papa.parse(file, {\n      header: true,\n      transformHeader: header => header.toLowerCase().trim(),\n      complete: async results => {\n        const data = results.data;\n        let successCount = 0;\n        try {\n          for (let row of data) {\n            if (!row.date || !row.time || !row.court || !row.division || !row.home || !row.away || !row.umpire) continue;\n            const parsedDate = dayjs(row.date.trim(), [\"DD/MM/YYYY\", \"MM/DD/YYYY\"], true);\n            console.log(\"Parsed date:\", row.date.trim(), \"=>\", parsedDate.format(\"YYYY-MM-DD\"));\n            if (!parsedDate.isValid()) continue;\n            const match = {\n              date: Timestamp.fromDate(parsedDate.toDate()),\n              time: row.time,\n              court: row.court,\n              division: row.division,\n              home: row.home.trim(),\n              away: row.away.trim(),\n              umpire: row.umpire.trim()\n            };\n            if (!currentTournament) {\n              setStatus(\"❌ No tournament selected.\");\n              return;\n            }\n            await addDoc(collection(db, `tournaments/${currentTournament}/matches`), match);\n            successCount++;\n          }\n          setStatus(`✅ Uploaded ${successCount} matches.`);\n        } catch (err) {\n          console.error(err);\n          setStatus(\"❌ Error during upload.\");\n        }\n      },\n      error: error => {\n        console.error(\"CSV Parse Error:\", error);\n        setStatus(\"❌ Failed to parse CSV.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Upload Match Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: e => setFile(e.target.files[0]),\n      className: \"mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm text-gray-700 dark:text-gray-200\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDraw, \"VLB3iegTxMes30E0wU2qOzrzs8I=\", false, function () {\n  return [useTournament];\n});\n_c = UploadDraw;\nvar _c;\n$RefreshReg$(_c, \"UploadDraw\");","map":{"version":3,"names":["useState","useTournament","Papa","collection","addDoc","Timestamp","db","dayjs","customParseFormat","jsxDEV","_jsxDEV","extend","UploadDraw","_s","file","setFile","status","setStatus","currentTournament","handleUpload","parse","header","transformHeader","toLowerCase","trim","complete","results","data","successCount","row","date","time","court","division","home","away","umpire","parsedDate","console","log","format","isValid","match","fromDate","toDate","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UploadDraw.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\ndayjs.extend(customParseFormat);\n\nexport default function UploadDraw() {\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const { currentTournament } = useTournament();\n\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Parsing CSV...\");\n\n    Papa.parse(file, {\n      header: true,\n      transformHeader: (header) => header.toLowerCase().trim(),\n      complete: async (results) => {\n        const data = results.data;\n        let successCount = 0;\n        try {\n          for (let row of data) {\n            if (!row.date || !row.time || !row.court || !row.division || !row.home || !row.away || !row.umpire) continue;\n\n            const parsedDate = dayjs(row.date.trim(), [\"DD/MM/YYYY\", \"MM/DD/YYYY\"], true);\n            console.log(\"Parsed date:\", row.date.trim(), \"=>\", parsedDate.format(\"YYYY-MM-DD\"));\n            if (!parsedDate.isValid()) continue;\n\n            const match = {\n              date: Timestamp.fromDate(parsedDate.toDate()),\n              time: row.time,\n              court: row.court,\n              division: row.division,\n              home: row.home.trim(),\n              away: row.away.trim(),\n              umpire: row.umpire.trim(),\n            };\n\n            if (!currentTournament) {\n              setStatus(\"❌ No tournament selected.\");\n              return;\n            }\n\n            await addDoc(collection(db, `tournaments/${currentTournament}/matches`), match);\n            successCount++;\n          }\n          setStatus(`✅ Uploaded ${successCount} matches.`);\n        } catch (err) {\n          console.error(err);\n          setStatus(\"❌ Error during upload.\");\n        }\n      },\n      error: (error) => {\n        console.error(\"CSV Parse Error:\", error);\n        setStatus(\"❌ Failed to parse CSV.\");\n      },\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-2\">Upload Match Draw</h2>\n      <input type=\"file\" accept=\".csv\" onChange={(e) => setFile(e.target.files[0])} className=\"mb-2\" />\n      <button className=\"bg-blue-600 text-white px-4 py-2 rounded\" onClick={handleUpload}>\n        Upload\n      </button>\n      <p className=\"mt-2 text-sm text-gray-700 dark:text-gray-200\">{status}</p>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}