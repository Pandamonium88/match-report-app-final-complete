{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireReportForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UmpireReportForm() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [formData, setFormData] = useState({\n    date: \"\",\n    match: \"\",\n    codeOfConduct: \"\",\n    penalties: \"\",\n    injuries: \"\",\n    suspectActions: \"\"\n  });\n  const [success, setSuccess] = useState(false);\n  const handleChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const docRef = {\n      ...formData,\n      submittedBy: user.uid,\n      submittedAt: serverTimestamp()\n    };\n    await addDoc(collection(db, \"umpireReports\"), docRef);\n    setSuccess(true);\n    setFormData({\n      date: \"\",\n      match: \"\",\n      codeOfConduct: \"\",\n      penalties: \"\",\n      injuries: \"\",\n      suspectActions: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4 bg-white dark:bg-gray-800 shadow rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Umpire Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500 mb-4\",\n      children: \"Report submitted!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"grid grid-cols-1 gap-4\",\n      children: [[\"Date\", \"Match\", \"CodeOfConduct\", \"Penalties\", \"Injuries\", \"SuspectActions\"].map(field => /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: field,\n        value: formData[field],\n        onChange: handleChange,\n        placeholder: field.replace(/([A-Z])/g, \" $1\"),\n        className: \"p-2 border rounded\"\n      }, field, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white py-2 rounded\",\n        children: \"Submit Umpire Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UmpireReportForm, \"IrUS/cL9jV2lW0r6Yifajjvg/2s=\", false, function () {\n  return [useAuth];\n});\n_c = UmpireReportForm;\nvar _c;\n$RefreshReg$(_c, \"UmpireReportForm\");","map":{"version":3,"names":["useState","addDoc","collection","serverTimestamp","db","useAuth","jsxDEV","_jsxDEV","UmpireReportForm","_s","user","formData","setFormData","date","match","codeOfConduct","penalties","injuries","suspectActions","success","setSuccess","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","docRef","submittedBy","uid","submittedAt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","onChange","placeholder","replace","type","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireReportForm.jsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useAuth } from \"../context/AuthContext\";\n\nexport default function UmpireReportForm() {\n  const { user } = useAuth();\n  const [formData, setFormData] = useState({\n    date: \"\",\n    match: \"\",\n    codeOfConduct: \"\",\n    penalties: \"\",\n    injuries: \"\",\n    suspectActions: \"\",\n  });\n  const [success, setSuccess] = useState(false);\n\n  const handleChange = (e) => {\n    setFormData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const docRef = {\n      ...formData,\n      submittedBy: user.uid,\n      submittedAt: serverTimestamp(),\n    };\n    await addDoc(collection(db, \"umpireReports\"), docRef);\n    setSuccess(true);\n    setFormData({\n      date: \"\",\n      match: \"\",\n      codeOfConduct: \"\",\n      penalties: \"\",\n      injuries: \"\",\n      suspectActions: \"\",\n    });\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4 bg-white dark:bg-gray-800 shadow rounded\">\n      <h2 className=\"text-xl font-bold mb-4\">Umpire Report</h2>\n      {success && <p className=\"text-green-500 mb-4\">Report submitted!</p>}\n      <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-4\">\n        {[\"Date\", \"Match\", \"CodeOfConduct\", \"Penalties\", \"Injuries\", \"SuspectActions\"].map((field) => (\n          <textarea\n            key={field}\n            name={field}\n            value={formData[field]}\n            onChange={handleChange}\n            placeholder={field.replace(/([A-Z])/g, \" $1\")}\n            className=\"p-2 border rounded\"\n          />\n        ))}\n        <button type=\"submit\" className=\"bg-blue-600 text-white py-2 rounded\">\n          Submit Umpire Report\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}