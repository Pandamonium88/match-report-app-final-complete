{"ast":null,"code":"import{useState,useEffect}from\"react\";import{useTournament}from\"../context/TournamentContext\";import Papa from\"papaparse\";import{collection,doc,Timestamp,writeBatch}from\"firebase/firestore\";import{db}from\"../firebase\";import dayjs from\"dayjs\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function UploadDraw(){const{tournaments,currentTournament,setCurrentTournament}=useTournament();const[file,setFile]=useState(null);const[status,setStatus]=useState(\"\");const[isUploading,setIsUploading]=useState(false);const[showTournamentSelector,setShowTournamentSelector]=useState(false);// Auto-select logic\nuseEffect(()=>{if(tournaments.length>0&&!currentTournament){const activeTournament=tournaments.find(t=>t.status==='active');if(activeTournament){setCurrentTournament(activeTournament);}else{setCurrentTournament(tournaments[0]);}}},[tournaments,currentTournament,setCurrentTournament]);const handleUpload=async()=>{if(!(currentTournament!==null&&currentTournament!==void 0&&currentTournament.id)){setStatus(\"❌ Please select a tournament first\");return;}if(!file){setStatus(\"❌ Please select a CSV file first\");return;}setIsUploading(true);setStatus(\"Processing matches...\");try{const results=await new Promise((resolve,reject)=>{Papa.parse(file,{header:true,complete:resolve,error:reject});});const batch=writeBatch(db);const matchesCollection=collection(db,`tournaments/${currentTournament.id}/matches`);let successCount=0;let errorCount=0;for(const row of results.data){try{const normalized=normalizeRow(row);validateRow(normalized);const match={date:Timestamp.fromDate(dayjs(normalized.date,['DD/MM/YYYY','YYYY-MM-DD']).toDate()),time:normalized.time,division:normalized.division,home:normalized.home,away:normalized.away,umpire:normalized.umpire||'',court:normalized.court||'1',tournamentId:currentTournament.id,createdAt:Timestamp.now()};const docRef=doc(matchesCollection);batch.set(docRef,match);successCount++;}catch(error){console.warn(\"Skipping invalid row:\",error.message);errorCount++;}}await batch.commit();setStatus(`✅ Successfully uploaded ${successCount} matches`+(errorCount>0?` (${errorCount} invalid rows skipped)`:\"\"));}catch(error){console.error(\"Upload failed:\",error);setStatus(`❌ Upload failed: ${error.message}`);}finally{setIsUploading(false);}};// Helper functions\nconst normalizeRow=row=>{return Object.fromEntries(Object.entries(row).map(_ref=>{let[k,v]=_ref;return[k.toLowerCase().trim(),typeof v==='string'?v.trim():v];}));};const validateRow=row=>{const requiredFields=['date','time','division','home','away'];const missing=requiredFields.filter(f=>!row[f]);if(missing.length>0){throw new Error(`Missing required fields: ${missing.join(', ')}`);}const date=dayjs(row.date,['DD/MM/YYYY','YYYY-MM-DD'],true);if(!date.isValid()){throw new Error(`Invalid date format: ${row.date}`);}const timeRegex=/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;if(!timeRegex.test(row.time)){throw new Error(`Invalid time format: ${row.time}`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-white\",children:(currentTournament===null||currentTournament===void 0?void 0:currentTournament.name)||\"Match Schedule Upload\"}),currentTournament&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowTournamentSelector(true),className:\"text-blue-400 hover:text-blue-300 text-sm\",children:\"Change Tournament\"})]}),(!currentTournament||showTournamentSelector)&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-800 p-6 rounded-lg mb-6\",children:tournaments.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-red-400 p-4 bg-red-900 rounded\",children:\"No tournaments available. Please create a tournament first.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-white mb-2\",children:\"Select Tournament:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"w-full p-3 rounded bg-white text-black\",onChange:e=>{const tournament=tournaments.find(t=>t.id===e.target.value);setCurrentTournament(tournament);setShowTournamentSelector(false);},value:(currentTournament===null||currentTournament===void 0?void 0:currentTournament.id)||'',children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a tournament\"}),tournaments.map(t=>/*#__PURE__*/_jsxs(\"option\",{value:t.id,children:[t.name,\" \",t.status==='active'&&'★']},t.id))]})]})}),currentTournament&&!showTournamentSelector&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 p-6 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-white mb-2\",children:\"Select Match Schedule CSV:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".csv\",onChange:e=>setFile(e.target.files[0]),className:\"block w-full text-white file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:bg-blue-600 file:text-white\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:!file||isUploading,className:`px-4 py-2 rounded text-white ${!file||isUploading?'bg-gray-500 cursor-not-allowed':'bg-green-600 hover:bg-green-700'}`,children:isUploading?'Uploading...':'Upload Matches'}),status&&/*#__PURE__*/_jsx(\"div\",{className:`mt-4 p-3 rounded ${status.startsWith('✅')?'bg-green-900 text-green-100':'bg-red-900 text-red-100'}`,children:status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 bg-gray-800 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white font-medium mb-2\",children:\"CSV Format Requirements\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full bg-gray-900 text-gray-300 text-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Time\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Court\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Division\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Home\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Away\"}),/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-2 border border-gray-700\",children:\"Umpire\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"06/05/2025\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"19:30\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"Court 1\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"WOMEN\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"ACT\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"QLD\"}),/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-2 border border-gray-700\",children:\"James Patel\"})]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-gray-400 text-sm mt-2 space-y-1\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Date formats: DD/MM/YYYY or YYYY-MM-DD\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Time format: 24-hour (e.g., 19:30)\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Court defaults to \\\"1\\\" if empty\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u2022 Umpire field is optional\"})]})]})]})]});}","map":{"version":3,"names":["useState","useEffect","useTournament","Papa","collection","doc","Timestamp","writeBatch","db","dayjs","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UploadDraw","tournaments","currentTournament","setCurrentTournament","file","setFile","status","setStatus","isUploading","setIsUploading","showTournamentSelector","setShowTournamentSelector","length","activeTournament","find","t","handleUpload","id","results","Promise","resolve","reject","parse","header","complete","error","batch","matchesCollection","successCount","errorCount","row","data","normalized","normalizeRow","validateRow","match","date","fromDate","toDate","time","division","home","away","umpire","court","tournamentId","createdAt","now","docRef","set","console","warn","message","commit","Object","fromEntries","entries","map","_ref","k","v","toLowerCase","trim","requiredFields","missing","filter","f","Error","join","isValid","timeRegex","test","className","children","name","onClick","onChange","e","tournament","target","value","type","accept","files","disabled","startsWith"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UploadDraw.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport Papa from \"papaparse\";\nimport { collection, doc, Timestamp, writeBatch } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport dayjs from \"dayjs\";\n\nexport default function UploadDraw() {\n  const { tournaments, currentTournament, setCurrentTournament } = useTournament();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const [showTournamentSelector, setShowTournamentSelector] = useState(false);\n\n  // Auto-select logic\n  useEffect(() => {\n    if (tournaments.length > 0 && !currentTournament) {\n      const activeTournament = tournaments.find(t => t.status === 'active');\n      if (activeTournament) {\n        setCurrentTournament(activeTournament);\n      } else {\n        setCurrentTournament(tournaments[0]);\n      }\n    }\n  }, [tournaments, currentTournament, setCurrentTournament]);\n\n  const handleUpload = async () => {\n    if (!currentTournament?.id) {\n      setStatus(\"❌ Please select a tournament first\");\n      return;\n    }\n\n    if (!file) {\n      setStatus(\"❌ Please select a CSV file first\");\n      return;\n    }\n\n    setIsUploading(true);\n    setStatus(\"Processing matches...\");\n\n    try {\n      const results = await new Promise((resolve, reject) => {\n        Papa.parse(file, {\n          header: true,\n          complete: resolve,\n          error: reject\n        });\n      });\n\n      const batch = writeBatch(db);\n      const matchesCollection = collection(db, `tournaments/${currentTournament.id}/matches`);\n      let successCount = 0;\n      let errorCount = 0;\n\n      for (const row of results.data) {\n        try {\n          const normalized = normalizeRow(row);\n          validateRow(normalized);\n          \n          const match = {\n            date: Timestamp.fromDate(dayjs(normalized.date, ['DD/MM/YYYY', 'YYYY-MM-DD']).toDate()),\n            time: normalized.time,\n            division: normalized.division,\n            home: normalized.home,\n            away: normalized.away,\n            umpire: normalized.umpire || '',\n            court: normalized.court || '1',\n            tournamentId: currentTournament.id,\n            createdAt: Timestamp.now()\n          };\n\n          const docRef = doc(matchesCollection);\n          batch.set(docRef, match);\n          successCount++;\n        } catch (error) {\n          console.warn(\"Skipping invalid row:\", error.message);\n          errorCount++;\n        }\n      }\n\n      await batch.commit();\n      setStatus(\n        `✅ Successfully uploaded ${successCount} matches` +\n        (errorCount > 0 ? ` (${errorCount} invalid rows skipped)` : \"\")\n      );\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      setStatus(`❌ Upload failed: ${error.message}`);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Helper functions\n  const normalizeRow = (row) => {\n    return Object.fromEntries(\n      Object.entries(row).map(([k, v]) => \n        [k.toLowerCase().trim(), typeof v === 'string' ? v.trim() : v]\n      )\n    );\n  };\n\n  const validateRow = (row) => {\n    const requiredFields = ['date', 'time', 'division', 'home', 'away'];\n    const missing = requiredFields.filter(f => !row[f]);\n    if (missing.length > 0) {\n      throw new Error(`Missing required fields: ${missing.join(', ')}`);\n    }\n\n    const date = dayjs(row.date, ['DD/MM/YYYY', 'YYYY-MM-DD'], true);\n    if (!date.isValid()) {\n      throw new Error(`Invalid date format: ${row.date}`);\n    }\n\n    const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n    if (!timeRegex.test(row.time)) {\n      throw new Error(`Invalid time format: ${row.time}`);\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-2xl mx-auto\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-2xl font-bold text-white\">\n          {currentTournament?.name || \"Match Schedule Upload\"}\n        </h2>\n        {currentTournament && (\n          <button\n            onClick={() => setShowTournamentSelector(true)}\n            className=\"text-blue-400 hover:text-blue-300 text-sm\"\n          >\n            Change Tournament\n          </button>\n        )}\n      </div>\n\n      {/* Tournament Selection */}\n      {(!currentTournament || showTournamentSelector) && (\n        <div className=\"bg-gray-800 p-6 rounded-lg mb-6\">\n          {tournaments.length === 0 ? (\n            <div className=\"text-red-400 p-4 bg-red-900 rounded\">\n              No tournaments available. Please create a tournament first.\n            </div>\n          ) : (\n            <>\n              <label className=\"block text-white mb-2\">\n                Select Tournament:\n              </label>\n              <select\n                className=\"w-full p-3 rounded bg-white text-black\"\n                onChange={(e) => {\n                  const tournament = tournaments.find(t => t.id === e.target.value);\n                  setCurrentTournament(tournament);\n                  setShowTournamentSelector(false);\n                }}\n                value={currentTournament?.id || ''}\n              >\n                <option value=\"\">Select a tournament</option>\n                {tournaments.map(t => (\n                  <option key={t.id} value={t.id}>\n                    {t.name} {t.status === 'active' && '★'}\n                  </option>\n                ))}\n              </select>\n            </>\n          )}\n        </div>\n      )}\n\n      {/* Main Upload Interface */}\n      {currentTournament && !showTournamentSelector && (\n        <>\n          <div className=\"bg-gray-800 p-6 rounded-lg\">\n            <div className=\"mb-4\">\n              <label className=\"block text-white mb-2\">\n                Select Match Schedule CSV:\n              </label>\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                onChange={(e) => setFile(e.target.files[0])}\n                className=\"block w-full text-white file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:bg-blue-600 file:text-white\"\n              />\n            </div>\n\n            <button\n              onClick={handleUpload}\n              disabled={!file || isUploading}\n              className={`px-4 py-2 rounded text-white ${\n                !file || isUploading\n                  ? 'bg-gray-500 cursor-not-allowed' \n                  : 'bg-green-600 hover:bg-green-700'\n              }`}\n            >\n              {isUploading ? 'Uploading...' : 'Upload Matches'}\n            </button>\n\n            {status && (\n              <div className={`mt-4 p-3 rounded ${\n                status.startsWith('✅') \n                  ? 'bg-green-900 text-green-100' \n                  : 'bg-red-900 text-red-100'\n              }`}>\n                {status}\n              </div>\n            )}\n          </div>\n\n          <div className=\"mt-8 bg-gray-800 p-4 rounded-lg\">\n            <h3 className=\"text-white font-medium mb-2\">CSV Format Requirements</h3>\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full bg-gray-900 text-gray-300 text-sm\">\n                <thead>\n                  <tr>\n                    <th className=\"px-4 py-2 border border-gray-700\">Date</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Time</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Court</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Division</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Home</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Away</th>\n                    <th className=\"px-4 py-2 border border-gray-700\">Umpire</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-4 py-2 border border-gray-700\">06/05/2025</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">19:30</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">Court 1</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">WOMEN</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">ACT</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">QLD</td>\n                    <td className=\"px-4 py-2 border border-gray-700\">James Patel</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className=\"text-gray-400 text-sm mt-2 space-y-1\">\n              <p>• Date formats: DD/MM/YYYY or YYYY-MM-DD</p>\n              <p>• Time format: 24-hour (e.g., 19:30)</p>\n              <p>• Court defaults to \"1\" if empty</p>\n              <p>• Umpire field is optional</p>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,aAAa,KAAQ,8BAA8B,CAC5D,MAAO,CAAAC,IAAI,KAAM,WAAW,CAC5B,OAASC,UAAU,CAAEC,GAAG,CAAEC,SAAS,CAAEC,UAAU,KAAQ,oBAAoB,CAC3E,OAASC,EAAE,KAAQ,aAAa,CAChC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE1B,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAG,CACnC,KAAM,CAAEC,WAAW,CAAEC,iBAAiB,CAAEC,oBAAqB,CAAC,CAAGjB,aAAa,CAAC,CAAC,CAChF,KAAM,CAACkB,IAAI,CAAEC,OAAO,CAAC,CAAGrB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACsB,MAAM,CAAEC,SAAS,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACwB,WAAW,CAAEC,cAAc,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC0B,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CAE3E;AACAC,SAAS,CAAC,IAAM,CACd,GAAIgB,WAAW,CAACW,MAAM,CAAG,CAAC,EAAI,CAACV,iBAAiB,CAAE,CAChD,KAAM,CAAAW,gBAAgB,CAAGZ,WAAW,CAACa,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACT,MAAM,GAAK,QAAQ,CAAC,CACrE,GAAIO,gBAAgB,CAAE,CACpBV,oBAAoB,CAACU,gBAAgB,CAAC,CACxC,CAAC,IAAM,CACLV,oBAAoB,CAACF,WAAW,CAAC,CAAC,CAAC,CAAC,CACtC,CACF,CACF,CAAC,CAAE,CAACA,WAAW,CAAEC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAC,CAE1D,KAAM,CAAAa,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,EAACd,iBAAiB,SAAjBA,iBAAiB,WAAjBA,iBAAiB,CAAEe,EAAE,EAAE,CAC1BV,SAAS,CAAC,oCAAoC,CAAC,CAC/C,OACF,CAEA,GAAI,CAACH,IAAI,CAAE,CACTG,SAAS,CAAC,kCAAkC,CAAC,CAC7C,OACF,CAEAE,cAAc,CAAC,IAAI,CAAC,CACpBF,SAAS,CAAC,uBAAuB,CAAC,CAElC,GAAI,CACF,KAAM,CAAAW,OAAO,CAAG,KAAM,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACrDlC,IAAI,CAACmC,KAAK,CAAClB,IAAI,CAAE,CACfmB,MAAM,CAAE,IAAI,CACZC,QAAQ,CAAEJ,OAAO,CACjBK,KAAK,CAAEJ,MACT,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,KAAM,CAAAK,KAAK,CAAGnC,UAAU,CAACC,EAAE,CAAC,CAC5B,KAAM,CAAAmC,iBAAiB,CAAGvC,UAAU,CAACI,EAAE,CAAE,eAAeU,iBAAiB,CAACe,EAAE,UAAU,CAAC,CACvF,GAAI,CAAAW,YAAY,CAAG,CAAC,CACpB,GAAI,CAAAC,UAAU,CAAG,CAAC,CAElB,IAAK,KAAM,CAAAC,GAAG,GAAI,CAAAZ,OAAO,CAACa,IAAI,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAC,UAAU,CAAGC,YAAY,CAACH,GAAG,CAAC,CACpCI,WAAW,CAACF,UAAU,CAAC,CAEvB,KAAM,CAAAG,KAAK,CAAG,CACZC,IAAI,CAAE9C,SAAS,CAAC+C,QAAQ,CAAC5C,KAAK,CAACuC,UAAU,CAACI,IAAI,CAAE,CAAC,YAAY,CAAE,YAAY,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,CACvFC,IAAI,CAAEP,UAAU,CAACO,IAAI,CACrBC,QAAQ,CAAER,UAAU,CAACQ,QAAQ,CAC7BC,IAAI,CAAET,UAAU,CAACS,IAAI,CACrBC,IAAI,CAAEV,UAAU,CAACU,IAAI,CACrBC,MAAM,CAAEX,UAAU,CAACW,MAAM,EAAI,EAAE,CAC/BC,KAAK,CAAEZ,UAAU,CAACY,KAAK,EAAI,GAAG,CAC9BC,YAAY,CAAE3C,iBAAiB,CAACe,EAAE,CAClC6B,SAAS,CAAExD,SAAS,CAACyD,GAAG,CAAC,CAC3B,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG3D,GAAG,CAACsC,iBAAiB,CAAC,CACrCD,KAAK,CAACuB,GAAG,CAACD,MAAM,CAAEb,KAAK,CAAC,CACxBP,YAAY,EAAE,CAChB,CAAE,MAAOH,KAAK,CAAE,CACdyB,OAAO,CAACC,IAAI,CAAC,uBAAuB,CAAE1B,KAAK,CAAC2B,OAAO,CAAC,CACpDvB,UAAU,EAAE,CACd,CACF,CAEA,KAAM,CAAAH,KAAK,CAAC2B,MAAM,CAAC,CAAC,CACpB9C,SAAS,CACP,2BAA2BqB,YAAY,UAAU,EAChDC,UAAU,CAAG,CAAC,CAAG,KAAKA,UAAU,wBAAwB,CAAG,EAAE,CAChE,CAAC,CACH,CAAE,MAAOJ,KAAK,CAAE,CACdyB,OAAO,CAACzB,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtClB,SAAS,CAAC,oBAAoBkB,KAAK,CAAC2B,OAAO,EAAE,CAAC,CAChD,CAAC,OAAS,CACR3C,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED;AACA,KAAM,CAAAwB,YAAY,CAAIH,GAAG,EAAK,CAC5B,MAAO,CAAAwB,MAAM,CAACC,WAAW,CACvBD,MAAM,CAACE,OAAO,CAAC1B,GAAG,CAAC,CAAC2B,GAAG,CAACC,IAAA,MAAC,CAACC,CAAC,CAAEC,CAAC,CAAC,CAAAF,IAAA,OAC7B,CAACC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAE,MAAO,CAAAF,CAAC,GAAK,QAAQ,CAAGA,CAAC,CAACE,IAAI,CAAC,CAAC,CAAGF,CAAC,CAAC,EAChE,CACF,CAAC,CACH,CAAC,CAED,KAAM,CAAA1B,WAAW,CAAIJ,GAAG,EAAK,CAC3B,KAAM,CAAAiC,cAAc,CAAG,CAAC,MAAM,CAAE,MAAM,CAAE,UAAU,CAAE,MAAM,CAAE,MAAM,CAAC,CACnE,KAAM,CAAAC,OAAO,CAAGD,cAAc,CAACE,MAAM,CAACC,CAAC,EAAI,CAACpC,GAAG,CAACoC,CAAC,CAAC,CAAC,CACnD,GAAIF,OAAO,CAACpD,MAAM,CAAG,CAAC,CAAE,CACtB,KAAM,IAAI,CAAAuD,KAAK,CAAC,4BAA4BH,OAAO,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CACnE,CAEA,KAAM,CAAAhC,IAAI,CAAG3C,KAAK,CAACqC,GAAG,CAACM,IAAI,CAAE,CAAC,YAAY,CAAE,YAAY,CAAC,CAAE,IAAI,CAAC,CAChE,GAAI,CAACA,IAAI,CAACiC,OAAO,CAAC,CAAC,CAAE,CACnB,KAAM,IAAI,CAAAF,KAAK,CAAC,wBAAwBrC,GAAG,CAACM,IAAI,EAAE,CAAC,CACrD,CAEA,KAAM,CAAAkC,SAAS,CAAG,mCAAmC,CACrD,GAAI,CAACA,SAAS,CAACC,IAAI,CAACzC,GAAG,CAACS,IAAI,CAAC,CAAE,CAC7B,KAAM,IAAI,CAAA4B,KAAK,CAAC,wBAAwBrC,GAAG,CAACS,IAAI,EAAE,CAAC,CACrD,CACF,CAAC,CAED,mBACE1C,KAAA,QAAK2E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpC5E,KAAA,QAAK2E,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrD9E,IAAA,OAAI6E,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CAC1C,CAAAvE,iBAAiB,SAAjBA,iBAAiB,iBAAjBA,iBAAiB,CAAEwE,IAAI,GAAI,uBAAuB,CACjD,CAAC,CACJxE,iBAAiB,eAChBP,IAAA,WACEgF,OAAO,CAAEA,CAAA,GAAMhE,yBAAyB,CAAC,IAAI,CAAE,CAC/C6D,SAAS,CAAC,2CAA2C,CAAAC,QAAA,CACtD,mBAED,CAAQ,CACT,EACE,CAAC,CAGL,CAAC,CAACvE,iBAAiB,EAAIQ,sBAAsB,gBAC5Cf,IAAA,QAAK6E,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAC7CxE,WAAW,CAACW,MAAM,GAAK,CAAC,cACvBjB,IAAA,QAAK6E,SAAS,CAAC,qCAAqC,CAAAC,QAAA,CAAC,6DAErD,CAAK,CAAC,cAEN5E,KAAA,CAAAE,SAAA,EAAA0E,QAAA,eACE9E,IAAA,UAAO6E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,oBAEzC,CAAO,CAAC,cACR5E,KAAA,WACE2E,SAAS,CAAC,wCAAwC,CAClDI,QAAQ,CAAGC,CAAC,EAAK,CACf,KAAM,CAAAC,UAAU,CAAG7E,WAAW,CAACa,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACE,EAAE,GAAK4D,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CACjE7E,oBAAoB,CAAC2E,UAAU,CAAC,CAChCnE,yBAAyB,CAAC,KAAK,CAAC,CAClC,CAAE,CACFqE,KAAK,CAAE,CAAA9E,iBAAiB,SAAjBA,iBAAiB,iBAAjBA,iBAAiB,CAAEe,EAAE,GAAI,EAAG,CAAAwD,QAAA,eAEnC9E,IAAA,WAAQqF,KAAK,CAAC,EAAE,CAAAP,QAAA,CAAC,qBAAmB,CAAQ,CAAC,CAC5CxE,WAAW,CAACwD,GAAG,CAAC1C,CAAC,eAChBlB,KAAA,WAAmBmF,KAAK,CAAEjE,CAAC,CAACE,EAAG,CAAAwD,QAAA,EAC5B1D,CAAC,CAAC2D,IAAI,CAAC,GAAC,CAAC3D,CAAC,CAACT,MAAM,GAAK,QAAQ,EAAI,GAAG,GAD3BS,CAAC,CAACE,EAEP,CACT,CAAC,EACI,CAAC,EACT,CACH,CACE,CACN,CAGAf,iBAAiB,EAAI,CAACQ,sBAAsB,eAC3Cb,KAAA,CAAAE,SAAA,EAAA0E,QAAA,eACE5E,KAAA,QAAK2E,SAAS,CAAC,4BAA4B,CAAAC,QAAA,eACzC5E,KAAA,QAAK2E,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB9E,IAAA,UAAO6E,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAC,4BAEzC,CAAO,CAAC,cACR9E,IAAA,UACEsF,IAAI,CAAC,MAAM,CACXC,MAAM,CAAC,MAAM,CACbN,QAAQ,CAAGC,CAAC,EAAKxE,OAAO,CAACwE,CAAC,CAACE,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAE,CAC5CX,SAAS,CAAC,mHAAmH,CAC9H,CAAC,EACC,CAAC,cAEN7E,IAAA,WACEgF,OAAO,CAAE3D,YAAa,CACtBoE,QAAQ,CAAE,CAAChF,IAAI,EAAII,WAAY,CAC/BgE,SAAS,CAAE,gCACT,CAACpE,IAAI,EAAII,WAAW,CAChB,gCAAgC,CAChC,iCAAiC,EACpC,CAAAiE,QAAA,CAEFjE,WAAW,CAAG,cAAc,CAAG,gBAAgB,CAC1C,CAAC,CAERF,MAAM,eACLX,IAAA,QAAK6E,SAAS,CAAE,oBACdlE,MAAM,CAAC+E,UAAU,CAAC,GAAG,CAAC,CAClB,6BAA6B,CAC7B,yBAAyB,EAC5B,CAAAZ,QAAA,CACAnE,MAAM,CACJ,CACN,EACE,CAAC,cAENT,KAAA,QAAK2E,SAAS,CAAC,iCAAiC,CAAAC,QAAA,eAC9C9E,IAAA,OAAI6E,SAAS,CAAC,6BAA6B,CAAAC,QAAA,CAAC,yBAAuB,CAAI,CAAC,cACxE9E,IAAA,QAAK6E,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9B5E,KAAA,UAAO2E,SAAS,CAAC,8CAA8C,CAAAC,QAAA,eAC7D9E,IAAA,UAAA8E,QAAA,cACE5E,KAAA,OAAA4E,QAAA,eACE9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,cAC1D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,cAC1D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cAC3D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,UAAQ,CAAI,CAAC,cAC9D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,cAC1D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,cAC1D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,QAAM,CAAI,CAAC,EAC1D,CAAC,CACA,CAAC,cACR9E,IAAA,UAAA8E,QAAA,cACE5E,KAAA,OAAA4E,QAAA,eACE9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,YAAU,CAAI,CAAC,cAChE9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cAC3D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,SAAO,CAAI,CAAC,cAC7D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,OAAK,CAAI,CAAC,cAC3D9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,KAAG,CAAI,CAAC,cACzD9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,KAAG,CAAI,CAAC,cACzD9E,IAAA,OAAI6E,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,aAAW,CAAI,CAAC,EAC/D,CAAC,CACA,CAAC,EACH,CAAC,CACL,CAAC,cACN5E,KAAA,QAAK2E,SAAS,CAAC,sCAAsC,CAAAC,QAAA,eACnD9E,IAAA,MAAA8E,QAAA,CAAG,+CAAwC,CAAG,CAAC,cAC/C9E,IAAA,MAAA8E,QAAA,CAAG,2CAAoC,CAAG,CAAC,cAC3C9E,IAAA,MAAA8E,QAAA,CAAG,yCAAgC,CAAG,CAAC,cACvC9E,IAAA,MAAA8E,QAAA,CAAG,iCAA0B,CAAG,CAAC,EAC9B,CAAC,EACH,CAAC,EACN,CACH,EACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}