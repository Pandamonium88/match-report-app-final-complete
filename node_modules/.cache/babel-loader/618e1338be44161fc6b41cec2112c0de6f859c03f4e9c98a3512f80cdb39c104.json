{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/context/TournamentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/TournamentContext.js\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\n\n// 1. Create the Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TournamentContext = /*#__PURE__*/createContext();\n\n// 2. Provider Component\nexport function TournamentProvider({\n  children\n}) {\n  _s();\n  const [tournaments, setTournaments] = useState([]);\n  const [currentTournament, setCurrentTournament] = useState(null);\n  useEffect(() => {\n    // Listen to ALL tournaments, ordered by name\n    const q = query(collection(db, \"tournaments\"), orderBy(\"name\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const all = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTournaments(all);\n    });\n    return unsubscribe;\n  }, []);\n  useEffect(() => {\n    if (!currentTournament && tournaments.length > 0) {\n      const activeOne = tournaments.find(t => t.active === true);\n      setCurrentTournament(activeOne || tournaments[0]);\n    }\n  }, [tournaments, currentTournament]);\n  return /*#__PURE__*/_jsxDEV(TournamentContext.Provider, {\n    value: {\n      tournaments,\n      currentTournament,\n      setCurrentTournament\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n// 3. Custom hook for easy consumption\n_s(TournamentProvider, \"KgzXLfrT7CzKcsktFsZTIThrR8c=\");\n_c = TournamentProvider;\nexport function useTournament() {\n  _s2();\n  const ctx = useContext(TournamentContext);\n  if (!ctx) {\n    throw new Error(\"useTournament must be used within a TournamentProvider\");\n  }\n  return ctx;\n}\n_s2(useTournament, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"TournamentProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","db","collection","query","orderBy","onSnapshot","jsxDEV","_jsxDEV","TournamentContext","TournamentProvider","children","_s","tournaments","setTournaments","currentTournament","setCurrentTournament","q","unsubscribe","snapshot","all","docs","map","doc","id","data","length","activeOne","find","t","active","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTournament","_s2","ctx","Error","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/context/TournamentContext.js"],"sourcesContent":["// src/context/TournamentContext.js\n\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { collection, query, orderBy, onSnapshot } from \"firebase/firestore\";\n\n// 1. Create the Context\nexport const TournamentContext = createContext();\n\n// 2. Provider Component\nexport function TournamentProvider({ children }) {\n  const [tournaments, setTournaments] = useState([]);\n  const [currentTournament, setCurrentTournament] = useState(null);\n\n  useEffect(() => {\n    // Listen to ALL tournaments, ordered by name\n    const q = query(collection(db, \"tournaments\"), orderBy(\"name\"));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const all = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setTournaments(all);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    if (!currentTournament && tournaments.length > 0) {\n      const activeOne = tournaments.find((t) => t.active === true);\n      setCurrentTournament(activeOne || tournaments[0]);\n    }\n  }, [tournaments, currentTournament]);\n\n  return (\n    <TournamentContext.Provider\n      value={{ tournaments, currentTournament, setCurrentTournament }}\n    >\n      {children}\n    </TournamentContext.Provider>\n  );\n}\n\n// 3. Custom hook for easy consumption\nexport function useTournament() {\n  const ctx = useContext(TournamentContext);\n  if (!ctx) {\n    throw new Error(\n      \"useTournament must be used within a TournamentProvider\"\n    );\n  }\n  return ctx;\n}"],"mappings":";;;AAAA;;AAEA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,iBAAiB,gBAAGX,aAAa,CAAC,CAAC;;AAEhD;AACA,OAAO,SAASY,kBAAkBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,CAAC,GAAGb,KAAK,CAACD,UAAU,CAACD,EAAE,EAAE,aAAa,CAAC,EAAEG,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/D,MAAMa,WAAW,GAAGZ,UAAU,CAACW,CAAC,EAAGE,QAAQ,IAAK;MAC9C,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;QACtCC,EAAE,EAAED,GAAG,CAACC,EAAE;QACV,GAAGD,GAAG,CAACE,IAAI,CAAC;MACd,CAAC,CAAC,CAAC;MACHX,cAAc,CAACM,GAAG,CAAC;IACrB,CAAC,CAAC;IAEF,OAAOF,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,iBAAiB,IAAIF,WAAW,CAACa,MAAM,GAAG,CAAC,EAAE;MAChD,MAAMC,SAAS,GAAGd,WAAW,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAK,IAAI,CAAC;MAC5Dd,oBAAoB,CAACW,SAAS,IAAId,WAAW,CAAC,CAAC,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACA,WAAW,EAAEE,iBAAiB,CAAC,CAAC;EAEpC,oBACEP,OAAA,CAACC,iBAAiB,CAACsB,QAAQ;IACzBC,KAAK,EAAE;MAAEnB,WAAW;MAAEE,iBAAiB;MAAEC;IAAqB,CAAE;IAAAL,QAAA,EAE/DA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC;;AAEA;AAAAxB,EAAA,CAlCgBF,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AAmClC,OAAO,SAAS4B,aAAaA,CAAA,EAAG;EAAAC,GAAA;EAC9B,MAAMC,GAAG,GAAGzC,UAAU,CAACU,iBAAiB,CAAC;EACzC,IAAI,CAAC+B,GAAG,EAAE;IACR,MAAM,IAAIC,KAAK,CACb,wDACF,CAAC;EACH;EACA,OAAOD,GAAG;AACZ;AAACD,GAAA,CAReD,aAAa;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}