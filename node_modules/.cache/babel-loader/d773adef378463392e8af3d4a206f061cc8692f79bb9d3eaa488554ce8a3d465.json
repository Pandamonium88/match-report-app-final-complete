{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireAppointments.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { collection, addDoc, setDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadDraw() {\n  _s();\n  const {\n    currentTournament\n  } = useTournament();\n  const [matchData, setMatchData] = useState({});\n  const handleUpload = async () => {\n    if (!currentTournament) {\n      alert(\"Please select a tournament first.\");\n      return;\n    }\n    try {\n      const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n      const matchId = matchData.id || \"\"; // assuming matchData has an id field\n      if (matchId) {\n        await setDoc(doc(matchesCollection, matchId), {\n          ...matchData\n        });\n      } else {\n        await addDoc(matchesCollection, {\n          ...matchData\n        });\n      }\n      alert(\"Match uploaded successfully.\");\n    } catch (error) {\n      console.error(\"Error uploading match: \", error);\n      alert(\"Failed to upload match.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDraw, \"OFbmcJPa4ImwzuDJcSMCuRGgsF8=\", false, function () {\n  return [useTournament];\n});\n_c = UploadDraw;\nvar _c;\n$RefreshReg$(_c, \"UploadDraw\");","map":{"version":3,"names":["useState","collection","addDoc","setDoc","doc","db","useTournament","jsxDEV","_jsxDEV","UploadDraw","_s","currentTournament","matchData","setMatchData","handleUpload","alert","matchesCollection","matchId","id","error","console","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UmpireAppointments.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { collection, addDoc, setDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\n\nexport default function UploadDraw() {\n  const { currentTournament } = useTournament();\n  const [matchData, setMatchData] = useState({});\n\n  const handleUpload = async () => {\n    if (!currentTournament) {\n      alert(\"Please select a tournament first.\");\n      return;\n    }\n    try {\n      const matchesCollection = collection(db, `tournaments/${currentTournament}/matches`);\n      const matchId = matchData.id || \"\"; // assuming matchData has an id field\n      if (matchId) {\n        await setDoc(doc(matchesCollection, matchId), { ...matchData });\n      } else {\n        await addDoc(matchesCollection, { ...matchData });\n      }\n      alert(\"Match uploaded successfully.\");\n    } catch (error) {\n      console.error(\"Error uploading match: \", error);\n      alert(\"Failed to upload match.\");\n    }\n  };\n\n  return (\n    <div>\n      {/* UI for uploading draw and setting matchData */}\n      <button onClick={handleUpload}>Upload Draw</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,MAAM,EAAEC,MAAM,EAAEC,GAAG,QAAQ,oBAAoB;AACpE,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,aAAa,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAkB,CAAC,GAAGL,aAAa,CAAC,CAAC;EAC7C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACH,iBAAiB,EAAE;MACtBI,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IACA,IAAI;MACF,MAAMC,iBAAiB,GAAGf,UAAU,CAACI,EAAE,EAAE,eAAeM,iBAAiB,UAAU,CAAC;MACpF,MAAMM,OAAO,GAAGL,SAAS,CAACM,EAAE,IAAI,EAAE,CAAC,CAAC;MACpC,IAAID,OAAO,EAAE;QACX,MAAMd,MAAM,CAACC,GAAG,CAACY,iBAAiB,EAAEC,OAAO,CAAC,EAAE;UAAE,GAAGL;QAAU,CAAC,CAAC;MACjE,CAAC,MAAM;QACL,MAAMV,MAAM,CAACc,iBAAiB,EAAE;UAAE,GAAGJ;QAAU,CAAC,CAAC;MACnD;MACAG,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CJ,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,eAEEb,OAAA;MAAQc,OAAO,EAAER,YAAa;MAAAO,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV;AAAChB,EAAA,CA9BuBD,UAAU;EAAA,QACFH,aAAa;AAAA;AAAAqB,EAAA,GADrBlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}