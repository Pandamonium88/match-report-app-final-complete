{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UploadDraw.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp, writeBatch } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadDraw() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const {\n    currentTournament\n  } = useTournament();\n  const parseDate = dateStr => {\n    const formats = ['DD/MM/YYYY', 'D/M/YYYY', 'YYYY-MM-DD'];\n    for (const format of formats) {\n      const parsed = dayjs(dateStr, format);\n      if (parsed.isValid()) return parsed.toDate();\n    }\n    return null;\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setStatus(\"❌ Please select a file\");\n      return;\n    }\n    if (!(currentTournament !== null && currentTournament !== void 0 && currentTournament.id)) {\n      setStatus(\"❌ Please select a tournament first\");\n      return;\n    }\n    setIsUploading(true);\n    setStatus(\"Parsing CSV...\");\n    Papa.parse(file, {\n      header: true,\n      complete: async results => {\n        try {\n          const batch = writeBatch(db);\n          const matchesCollection = collection(db, `tournaments/${currentTournament.id}/matches`);\n          let successCount = 0;\n          for (const row of results.data) {\n            var _row$umpire;\n            // Validate required fields\n            if (!row.date || !row.time || !row.court || !row.division || !row.teams) continue;\n\n            // Parse date\n            const parsedDate = parseDate(row.date);\n            if (!parsedDate) continue;\n\n            // Create match object\n            const match = {\n              date: Timestamp.fromDate(parsedDate),\n              time: row.time.trim(),\n              court: row.court.trim(),\n              division: row.division.trim(),\n              teams: row.teams.trim(),\n              umpire: ((_row$umpire = row.umpire) === null || _row$umpire === void 0 ? void 0 : _row$umpire.trim()) || \"\",\n              createdAt: Timestamp.now()\n            };\n\n            // Add to batch\n            const docRef = doc(matchesCollection);\n            batch.set(docRef, match);\n            successCount++;\n          }\n          await batch.commit();\n          setStatus(`✅ Successfully uploaded ${successCount} matches`);\n        } catch (error) {\n          console.error(\"Upload error:\", error);\n          setStatus(`❌ Error: ${error.message}`);\n        } finally {\n          setIsUploading(false);\n        }\n      },\n      error: error => {\n        console.error(\"CSV error:\", error);\n        setStatus(\"❌ Failed to parse CSV\");\n        setIsUploading(false);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-2xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-white\",\n      children: \"Upload Match Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-6 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-white mb-2\",\n          children: \"Select CSV File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: e => setFile(e.target.files[0]),\n          className: \"block w-full text-white file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:bg-blue-600 file:text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: !file || isUploading,\n        className: `px-4 py-2 rounded text-white ${!file || isUploading ? 'bg-gray-500 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700'}`,\n        children: isUploading ? 'Uploading...' : 'Upload Draw'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-4 p-3 rounded ${status.startsWith('✅') ? 'bg-green-900 text-green-100' : 'bg-red-900 text-red-100'}`,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 bg-gray-800 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-white font-medium mb-2\",\n        children: \"Expected CSV Format:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"text-gray-300 text-sm bg-gray-900 p-3 rounded overflow-x-auto\",\n        children: [`Date,Time,Court,Division,Teams,Umpire\\n`, `01/05/2025,18:30,1,Men's A Grade,Team A vs Team B,Umpire Name\\n`, `01/05/2025,19:45,2,Women's Premier,Team X vs Team Y,Another Umpire`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDraw, \"0eL9ed2z1kLzEx6CZakU4ztYgsE=\", false, function () {\n  return [useTournament];\n});\n_c = UploadDraw;\nvar _c;\n$RefreshReg$(_c, \"UploadDraw\");","map":{"version":3,"names":["useState","useTournament","Papa","collection","addDoc","Timestamp","writeBatch","db","dayjs","jsxDEV","_jsxDEV","UploadDraw","_s","file","setFile","status","setStatus","isUploading","setIsUploading","currentTournament","parseDate","dateStr","formats","format","parsed","isValid","toDate","handleUpload","id","parse","header","complete","results","batch","matchesCollection","successCount","row","data","_row$umpire","date","time","court","division","teams","parsedDate","match","fromDate","trim","umpire","createdAt","now","docRef","doc","set","commit","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","disabled","startsWith","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UploadDraw.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp, writeBatch } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport dayjs from \"dayjs\";\n\nexport default function UploadDraw() {\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  const { currentTournament } = useTournament();\n\n  const parseDate = (dateStr) => {\n    const formats = ['DD/MM/YYYY', 'D/M/YYYY', 'YYYY-MM-DD'];\n    for (const format of formats) {\n      const parsed = dayjs(dateStr, format);\n      if (parsed.isValid()) return parsed.toDate();\n    }\n    return null;\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setStatus(\"❌ Please select a file\");\n      return;\n    }\n    if (!currentTournament?.id) {\n      setStatus(\"❌ Please select a tournament first\");\n      return;\n    }\n\n    setIsUploading(true);\n    setStatus(\"Parsing CSV...\");\n\n    Papa.parse(file, {\n      header: true,\n      complete: async (results) => {\n        try {\n          const batch = writeBatch(db);\n          const matchesCollection = collection(db, `tournaments/${currentTournament.id}/matches`);\n          let successCount = 0;\n\n          for (const row of results.data) {\n            // Validate required fields\n            if (!row.date || !row.time || !row.court || !row.division || !row.teams) continue;\n\n            // Parse date\n            const parsedDate = parseDate(row.date);\n            if (!parsedDate) continue;\n\n            // Create match object\n            const match = {\n              date: Timestamp.fromDate(parsedDate),\n              time: row.time.trim(),\n              court: row.court.trim(),\n              division: row.division.trim(),\n              teams: row.teams.trim(),\n              umpire: row.umpire?.trim() || \"\",\n              createdAt: Timestamp.now()\n            };\n\n            // Add to batch\n            const docRef = doc(matchesCollection);\n            batch.set(docRef, match);\n            successCount++;\n          }\n\n          await batch.commit();\n          setStatus(`✅ Successfully uploaded ${successCount} matches`);\n        } catch (error) {\n          console.error(\"Upload error:\", error);\n          setStatus(`❌ Error: ${error.message}`);\n        } finally {\n          setIsUploading(false);\n        }\n      },\n      error: (error) => {\n        console.error(\"CSV error:\", error);\n        setStatus(\"❌ Failed to parse CSV\");\n        setIsUploading(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"p-4 max-w-2xl mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-4 text-white\">Upload Match Draw</h2>\n      \n      <div className=\"bg-gray-800 p-6 rounded-lg\">\n        <div className=\"mb-4\">\n          <label className=\"block text-white mb-2\">\n            Select CSV File\n          </label>\n          <input\n            type=\"file\"\n            accept=\".csv\"\n            onChange={(e) => setFile(e.target.files[0])}\n            className=\"block w-full text-white file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:bg-blue-600 file:text-white\"\n          />\n        </div>\n\n        <button\n          onClick={handleUpload}\n          disabled={!file || isUploading}\n          className={`px-4 py-2 rounded text-white ${\n            !file || isUploading \n              ? 'bg-gray-500 cursor-not-allowed' \n              : 'bg-green-600 hover:bg-green-700'\n          }`}\n        >\n          {isUploading ? 'Uploading...' : 'Upload Draw'}\n        </button>\n\n        {status && (\n          <div className={`mt-4 p-3 rounded ${\n            status.startsWith('✅') ? 'bg-green-900 text-green-100' : 'bg-red-900 text-red-100'\n          }`}>\n            {status}\n          </div>\n        )}\n      </div>\n\n      <div className=\"mt-8 bg-gray-800 p-4 rounded-lg\">\n        <h3 className=\"text-white font-medium mb-2\">Expected CSV Format:</h3>\n        <pre className=\"text-gray-300 text-sm bg-gray-900 p-3 rounded overflow-x-auto\">\n          {`Date,Time,Court,Division,Teams,Umpire\\n`}\n          {`01/05/2025,18:30,1,Men's A Grade,Team A vs Team B,Umpire Name\\n`}\n          {`01/05/2025,19:45,2,Women's Premier,Team X vs Team Y,Another Umpire`}\n        </pre>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}