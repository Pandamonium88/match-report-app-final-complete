{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\nimport { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { auth, db } from '../firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const fetchUserRole = useCallback(async firebaseUser => {\n    try {\n      var _snap$data;\n      const ref = doc(db, 'users', firebaseUser.uid);\n      const snap = await getDoc(ref);\n      if (!snap.exists()) {\n        await setDoc(ref, {\n          email: firebaseUser.email,\n          role: 'unassigned',\n          createdAt: new Date().toISOString()\n        });\n      }\n      return ((_snap$data = snap.data()) === null || _snap$data === void 0 ? void 0 : _snap$data.role) || 'unassigned';\n    } catch (error) {\n      console.error(\"Error fetching user role:\", error);\n      return 'unassigned';\n    }\n  }, []);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async firebaseUser => {\n      setUser(firebaseUser);\n      setRole(firebaseUser ? await fetchUserRole(firebaseUser) : null);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, [fetchUserRole]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      role,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"q4EKZEgTwW21gjtV6ZhB81362Ss=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","useCallback","auth","db","onAuthStateChanged","doc","getDoc","setDoc","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","role","setRole","loading","setLoading","fetchUserRole","firebaseUser","_snap$data","ref","uid","snap","exists","email","createdAt","Date","toISOString","data","error","console","unsubscribe","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/context/AuthContext.jsx"],"sourcesContent":["// AuthContext.js\nimport { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { auth, db } from '../firebase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\n\nconst AuthContext = createContext();\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUserRole = useCallback(async (firebaseUser) => {\n    try {\n      const ref = doc(db, 'users', firebaseUser.uid);\n      const snap = await getDoc(ref);\n      \n      if (!snap.exists()) {\n        await setDoc(ref, {\n          email: firebaseUser.email,\n          role: 'unassigned',\n          createdAt: new Date().toISOString()\n        });\n      }\n      return snap.data()?.role || 'unassigned';\n    } catch (error) {\n      console.error(\"Error fetching user role:\", error);\n      return 'unassigned';\n    }\n  }, []);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\n      setUser(firebaseUser);\n      setRole(firebaseUser ? await fetchUserRole(firebaseUser) : null);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, [fetchUserRole]);\n\n  return (\n    <AuthContext.Provider value={{ user, role, loading }}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACnF,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;AACnC,OAAO,MAAMc,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMd,UAAU,CAACY,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMsB,aAAa,GAAGrB,WAAW,CAAC,MAAOsB,YAAY,IAAK;IACxD,IAAI;MAAA,IAAAC,UAAA;MACF,MAAMC,GAAG,GAAGpB,GAAG,CAACF,EAAE,EAAE,OAAO,EAAEoB,YAAY,CAACG,GAAG,CAAC;MAC9C,MAAMC,IAAI,GAAG,MAAMrB,MAAM,CAACmB,GAAG,CAAC;MAE9B,IAAI,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;QAClB,MAAMrB,MAAM,CAACkB,GAAG,EAAE;UAChBI,KAAK,EAAEN,YAAY,CAACM,KAAK;UACzBX,IAAI,EAAE,YAAY;UAClBY,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC,CAAC;MACJ;MACA,OAAO,EAAAR,UAAA,GAAAG,IAAI,CAACM,IAAI,CAAC,CAAC,cAAAT,UAAA,uBAAXA,UAAA,CAAaN,IAAI,KAAI,YAAY;IAC1C,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,OAAO,YAAY;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAENnC,SAAS,CAAC,MAAM;IACd,MAAMqC,WAAW,GAAGhC,kBAAkB,CAACF,IAAI,EAAE,MAAOqB,YAAY,IAAK;MACnEN,OAAO,CAACM,YAAY,CAAC;MACrBJ,OAAO,CAACI,YAAY,GAAG,MAAMD,aAAa,CAACC,YAAY,CAAC,GAAG,IAAI,CAAC;MAChEF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IACF,OAAOe,WAAW;EACpB,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnB,oBACEb,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,IAAI;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAClD,CAACM,OAAO,IAAIN;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC3B,GAAA,CAtCWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}