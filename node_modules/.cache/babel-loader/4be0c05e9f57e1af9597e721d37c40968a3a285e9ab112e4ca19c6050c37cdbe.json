{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UmpireAppointments.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { collection, collectionGroup, getDocs, doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport dayjs from \"dayjs\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UmpireAppointments() {\n  _s();\n  const {\n    currentTournament,\n    setCurrentTournament,\n    tournaments\n  } = useTournament();\n  const [matches, setMatches] = useState([]);\n  const [umpires, setUmpires] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [matchesLoaded, setMatchesLoaded] = useState(false);\n  const [umpiresLoaded, setUmpiresLoaded] = useState(false);\n  const getGridColsClass = count => {\n    switch (count) {\n      case 1:\n        return \"grid-cols-1\";\n      case 2:\n        return \"grid-cols-2\";\n      case 3:\n        return \"grid-cols-3\";\n      case 4:\n        return \"grid-cols-4\";\n      case 5:\n        return \"grid-cols-5\";\n      case 6:\n        return \"grid-cols-6\";\n      default:\n        return \"grid-cols-1\";\n    }\n  };\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        let snapshot;\n        if (currentTournament) {\n          const matchesRef = collection(db, `tournaments/${currentTournament.id}/matches`);\n          snapshot = await getDocs(matchesRef);\n          const data = snapshot.docs.map(doc => ({\n            id: doc.id,\n            tournamentId: currentTournament.id,\n            ...doc.data()\n          }));\n          setMatches(data);\n        } else {\n          const matchesRef = collectionGroup(db, \"matches\");\n          snapshot = await getDocs(matchesRef);\n          const data = snapshot.docs.map(doc => {\n            const pathSegments = doc.ref.path.split('/');\n            const tournamentId = pathSegments[1];\n            return {\n              id: doc.id,\n              tournamentId,\n              ...doc.data()\n            };\n          });\n          setMatches(data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching matches:\", error);\n        setMatches([]);\n      } finally {\n        setMatchesLoaded(true);\n      }\n    };\n    const fetchUmpires = async () => {\n      try {\n        const usersRef = collection(db, \"users\");\n        const snapshot = await getDocs(usersRef);\n        const umpireList = snapshot.docs.map(doc => doc.data()).filter(user => user.role === \"umpire\").map(user => ({\n          name: `${user.firstName} ${user.lastName}`,\n          email: user.email\n        }));\n        setUmpires(umpireList);\n      } catch (error) {\n        console.error(\"Error fetching umpires:\", error);\n      } finally {\n        setUmpiresLoaded(true);\n      }\n    };\n    fetchMatches();\n    fetchUmpires();\n  }, [currentTournament]);\n  useEffect(() => {\n    // removed: now handled by TournamentContext\n  }, []);\n  useEffect(() => {\n    if (matchesLoaded && umpiresLoaded) {\n      setLoading(false);\n    }\n  }, [matchesLoaded, umpiresLoaded]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-white\",\n      children: \"Loading matches and umpires...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n  if (!matches.length && !loading) {\n    console.warn(\"No matches found. Tournament context:\", currentTournament);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-white\",\n      children: [\"No matches found to display.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }, this), currentTournament ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Active Tournament: \", currentTournament.name || currentTournament.id]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No active tournament context \\u2014 showing all available matches.\"\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n  const handleAssignUmpire = async (matchId, umpireName) => {\n    try {\n      // Find the tournamentId for this match from matches array\n      const matchObj = matches.find(m => m.id === matchId);\n      const tournamentId = matchObj === null || matchObj === void 0 ? void 0 : matchObj.tournamentId;\n      if (!tournamentId) throw new Error(\"Tournament ID not found for match\");\n      const matchRef = doc(db, `tournaments/${tournamentId}/matches`, matchId);\n      await updateDoc(matchRef, {\n        umpire: umpireName\n      });\n      setMatches(prev => prev.map(m => m.id === matchId ? {\n        ...m,\n        umpire: umpireName\n      } : m));\n    } catch (error) {\n      console.error(\"Error assigning umpire:\", error);\n    }\n  };\n\n  // Add logging for sort validity\n  const sortedMatches = matches.slice().sort((a, b) => {\n    const dateA = new Date(a.time);\n    const dateB = new Date(b.time);\n    if (isNaN(dateA)) {\n      console.warn(\"Invalid date for match a:\", a);\n    }\n    if (isNaN(dateB)) {\n      console.warn(\"Invalid date for match b:\", b);\n    }\n    return dateA - dateB;\n  });\n  const groupedMatches = sortedMatches.reduce((acc, match) => {\n    const timeKey = dayjs(match.time).format(\"YYYY-MM-DD HH:mm\"); // more consistent formatting\n    if (!acc[timeKey]) acc[timeKey] = [];\n    acc[timeKey].push(match);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"text-white font-semibold mr-2\",\n        children: \"Select Tournament:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"p-2 rounded text-black\",\n        value: (currentTournament === null || currentTournament === void 0 ? void 0 : currentTournament.id) || \"\",\n        onChange: e => {\n          const selected = tournaments.find(t => t.id === e.target.value);\n          setCurrentTournament(selected || null);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Tournaments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), tournaments.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.id,\n          children: t.name || t.id\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold underline mb-4\",\n        children: \"Umpire Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), Object.keys(groupedMatches).sort((a, b) => new Date(a) - new Date(b)).map(time => {\n        const matchesAtTime = groupedMatches[time];\n        const colCount = matchesAtTime.length;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8 border-b border-white pb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-3\",\n            children: dayjs(time).format(\"dddd, D MMM YYYY - HH:mm\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid ${getGridColsClass(colCount)} gap-4 mb-1`,\n            children: matchesAtTime.map((match, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center font-bold text-center\",\n              children: match.division || \"N/A\"\n            }, match.id || idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid ${getGridColsClass(colCount)} gap-4 mb-1`,\n            children: matchesAtTime.map((match, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center text-center\",\n              children: match.teams ? match.teams.split(\" vs \")[0] : \"TBD\"\n            }, match.id || idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid ${getGridColsClass(colCount)} gap-4 mb-1`,\n            children: matchesAtTime.map((match, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center text-center\",\n              children: match.teams ? match.teams.split(\" vs \")[1] : \"TBD\"\n            }, match.id || idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `grid ${getGridColsClass(colCount)} gap-4`,\n            children: matchesAtTime.map((match, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-700 p-2 rounded shadow-md min-h-[50px] flex flex-col items-center justify-center text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"mt-1 p-1 w-full text-black\",\n                onChange: e => handleAssignUmpire(match.id, e.target.value),\n                value: match.umpire || \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Assign Umpire\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), umpires.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: u.name,\n                  children: u.name\n                }, u.email, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"italic text-sm mt-1 w-full truncate\",\n                children: match.umpire || \"Unassigned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)]\n            }, match.id || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UmpireAppointments, \"yOJAgzWT9v7yo687aW8y7JUk4lU=\", false, function () {\n  return [useTournament];\n});\n_c = UmpireAppointments;\nvar _c;\n$RefreshReg$(_c, \"UmpireAppointments\");","map":{"version":3,"names":["useState","useEffect","collection","collectionGroup","getDocs","doc","updateDoc","db","useTournament","dayjs","jsxDEV","_jsxDEV","Fragment","_Fragment","UmpireAppointments","_s","currentTournament","setCurrentTournament","tournaments","matches","setMatches","umpires","setUmpires","loading","setLoading","matchesLoaded","setMatchesLoaded","umpiresLoaded","setUmpiresLoaded","getGridColsClass","count","fetchMatches","snapshot","matchesRef","id","data","docs","map","tournamentId","pathSegments","ref","path","split","error","console","fetchUmpires","usersRef","umpireList","filter","user","role","name","firstName","lastName","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","warn","handleAssignUmpire","matchId","umpireName","matchObj","find","m","Error","matchRef","umpire","prev","sortedMatches","slice","sort","a","b","dateA","Date","time","dateB","isNaN","groupedMatches","reduce","acc","match","timeKey","format","push","value","onChange","e","selected","t","target","Object","keys","matchesAtTime","colCount","idx","division","teams","u","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/pages/UmpireAppointments.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { collection, collectionGroup, getDocs, doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useTournament } from \"../context/TournamentContext\";\nimport dayjs from \"dayjs\";\n\nexport default function UmpireAppointments() {\n  const { currentTournament, setCurrentTournament, tournaments } = useTournament();\n  const [matches, setMatches] = useState([]);\n  const [umpires, setUmpires] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [matchesLoaded, setMatchesLoaded] = useState(false);\n  const [umpiresLoaded, setUmpiresLoaded] = useState(false);\n\n  const getGridColsClass = (count) => {\n    switch (count) {\n      case 1: return \"grid-cols-1\";\n      case 2: return \"grid-cols-2\";\n      case 3: return \"grid-cols-3\";\n      case 4: return \"grid-cols-4\";\n      case 5: return \"grid-cols-5\";\n      case 6: return \"grid-cols-6\";\n      default: return \"grid-cols-1\";\n    }\n  };\n\n  useEffect(() => {\n    const fetchMatches = async () => {\n      try {\n        let snapshot;\n        if (currentTournament) {\n          const matchesRef = collection(db, `tournaments/${currentTournament.id}/matches`);\n          snapshot = await getDocs(matchesRef);\n          const data = snapshot.docs.map(doc => ({ id: doc.id, tournamentId: currentTournament.id, ...doc.data() }));\n          setMatches(data);\n        } else {\n          const matchesRef = collectionGroup(db, \"matches\");\n          snapshot = await getDocs(matchesRef);\n          const data = snapshot.docs.map(doc => {\n            const pathSegments = doc.ref.path.split('/');\n            const tournamentId = pathSegments[1];\n            return { id: doc.id, tournamentId, ...doc.data() };\n          });\n          setMatches(data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching matches:\", error);\n        setMatches([]);\n      } finally {\n        setMatchesLoaded(true);\n      }\n    };\n\n    const fetchUmpires = async () => {\n      try {\n        const usersRef = collection(db, \"users\");\n        const snapshot = await getDocs(usersRef);\n        const umpireList = snapshot.docs\n          .map(doc => doc.data())\n          .filter(user => user.role === \"umpire\")\n          .map(user => ({\n            name: `${user.firstName} ${user.lastName}`,\n            email: user.email\n          }));\n        setUmpires(umpireList);\n      } catch (error) {\n        console.error(\"Error fetching umpires:\", error);\n      } finally {\n        setUmpiresLoaded(true);\n      }\n    };\n\n    fetchMatches();\n    fetchUmpires();\n  }, [currentTournament]);\n\n  useEffect(() => {\n    // removed: now handled by TournamentContext\n  }, []);\n\n  useEffect(() => {\n    if (matchesLoaded && umpiresLoaded) {\n      setLoading(false);\n    }\n  }, [matchesLoaded, umpiresLoaded]);\n\n  if (loading) {\n    return <div className=\"p-4 text-white\">Loading matches and umpires...</div>;\n  }\n\n  if (!matches.length && !loading) {\n    console.warn(\"No matches found. Tournament context:\", currentTournament);\n    return (\n      <div className=\"p-4 text-white\">\n        No matches found to display.<br />\n        {currentTournament ? (\n          <>Active Tournament: {currentTournament.name || currentTournament.id}</>\n        ) : (\n          <>No active tournament context — showing all available matches.</>\n        )}\n      </div>\n    );\n  }\n\n  const handleAssignUmpire = async (matchId, umpireName) => {\n    try {\n      // Find the tournamentId for this match from matches array\n      const matchObj = matches.find(m => m.id === matchId);\n      const tournamentId = matchObj?.tournamentId;\n      if (!tournamentId) throw new Error(\"Tournament ID not found for match\");\n      const matchRef = doc(db, `tournaments/${tournamentId}/matches`, matchId);\n      await updateDoc(matchRef, { umpire: umpireName });\n      setMatches(prev =>\n        prev.map(m => (m.id === matchId ? { ...m, umpire: umpireName } : m))\n      );\n    } catch (error) {\n      console.error(\"Error assigning umpire:\", error);\n    }\n  };\n\n  // Add logging for sort validity\n  const sortedMatches = matches.slice().sort((a, b) => {\n    const dateA = new Date(a.time);\n    const dateB = new Date(b.time);\n    if (isNaN(dateA)) {\n      console.warn(\"Invalid date for match a:\", a);\n    }\n    if (isNaN(dateB)) {\n      console.warn(\"Invalid date for match b:\", b);\n    }\n    return dateA - dateB;\n  });\n  const groupedMatches = sortedMatches.reduce((acc, match) => {\n    const timeKey = dayjs(match.time).format(\"YYYY-MM-DD HH:mm\"); // more consistent formatting\n    if (!acc[timeKey]) acc[timeKey] = [];\n    acc[timeKey].push(match);\n    return acc;\n  }, {});\n\n  return (\n    <>\n      <div className=\"mb-4\">\n        <label className=\"text-white font-semibold mr-2\">Select Tournament:</label>\n        <select\n          className=\"p-2 rounded text-black\"\n          value={currentTournament?.id || \"\"}\n          onChange={(e) => {\n            const selected = tournaments.find(t => t.id === e.target.value);\n            setCurrentTournament(selected || null);\n          }}\n        >\n          <option value=\"\">All Tournaments</option>\n          {tournaments.map(t => (\n            <option key={t.id} value={t.id}>{t.name || t.id}</option>\n          ))}\n        </select>\n      </div>\n      <div className=\"p-4 text-white\">\n        <h2 className=\"text-2xl font-bold underline mb-4\">Umpire Appointments</h2>\n\n        {Object.keys(groupedMatches).sort((a, b) => new Date(a) - new Date(b)).map(time => {\n          const matchesAtTime = groupedMatches[time];\n          const colCount = matchesAtTime.length;\n          return (\n            <div key={time} className=\"mb-8 border-b border-white pb-4\">\n              <h3 className=\"text-xl font-semibold mb-3\">{dayjs(time).format(\"dddd, D MMM YYYY - HH:mm\")}</h3>\n              <div className={`grid ${getGridColsClass(colCount)} gap-4 mb-1`}>\n                {matchesAtTime.map((match, idx) => (\n                  <div key={match.id || idx} className=\"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center font-bold text-center\">\n                    {match.division || \"N/A\"}\n                  </div>\n                ))}\n              </div>\n              <div className={`grid ${getGridColsClass(colCount)} gap-4 mb-1`}>\n                {matchesAtTime.map((match, idx) => (\n                  <div key={match.id || idx} className=\"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center text-center\">\n                    {match.teams ? match.teams.split(\" vs \")[0] : \"TBD\"}\n                  </div>\n                ))}\n              </div>\n              <div className={`grid ${getGridColsClass(colCount)} gap-4 mb-1`}>\n                {matchesAtTime.map((match, idx) => (\n                  <div key={match.id || idx} className=\"bg-blue-700 p-2 rounded shadow-md min-h-[30px] flex items-center justify-center text-center\">\n                    {match.teams ? match.teams.split(\" vs \")[1] : \"TBD\"}\n                  </div>\n                ))}\n              </div>\n              <div className={`grid ${getGridColsClass(colCount)} gap-4`}>\n                {matchesAtTime.map((match, idx) => (\n                  <div key={match.id || idx} className=\"bg-blue-700 p-2 rounded shadow-md min-h-[50px] flex flex-col items-center justify-center text-center\">\n                    <select\n                      className=\"mt-1 p-1 w-full text-black\"\n                      onChange={e => handleAssignUmpire(match.id, e.target.value)}\n                      value={match.umpire || \"\"}\n                    >\n                      <option value=\"\">Assign Umpire</option>\n                      {umpires.map(u => (\n                        <option key={u.email} value={u.name}>{u.name}</option>\n                      ))}\n                    </select>\n                    <p className=\"italic text-sm mt-1 w-full truncate\">{match.umpire || \"Unassigned\"}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}