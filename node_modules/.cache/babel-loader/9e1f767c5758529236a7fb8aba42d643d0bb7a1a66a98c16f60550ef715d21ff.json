{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// ProtectedRoute.jsx\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingSpinner from './LoadingSpinner'; // Add a proper loading component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  requireAdmin = false\n}) {\n  _s();\n  const {\n    user,\n    role,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  if (!user) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n  if (requireAdmin && role !== 'admin') return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/unauthorized\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n  if (!requireAdmin && role === 'unassigned') return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/profile-setup\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this); // New route for unassigned users\n\n  return children;\n}\n_s(ProtectedRoute, \"E4wfBLnpcMq0gLWTUwmZlenjLWM=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useLocation","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","requireAdmin","_s","user","role","loading","location","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/Match Report/match-report-app-final-complete/src/components/ProtectedRoute.jsx"],"sourcesContent":["// ProtectedRoute.jsx\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport LoadingSpinner from './LoadingSpinner'; // Add a proper loading component\n\nexport default function ProtectedRoute({ children, requireAdmin = false }) {\n  const { user, role, loading } = useAuth();\n  const location = useLocation();\n\n  if (loading) return <LoadingSpinner />;\n\n  if (!user) \n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  \n  if (requireAdmin && role !== 'admin') \n    return <Navigate to=\"/unauthorized\" replace />;\n  \n  if (!requireAdmin && role === 'unassigned') \n    return <Navigate to=\"/profile-setup\" replace />; // New route for unassigned users\n\n  return children;\n}"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAM,CAAC,EAAE;EAAAC,EAAA;EACzE,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGV,OAAO,CAAC,CAAC;EACzC,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAIW,OAAO,EAAE,oBAAOP,OAAA,CAACF,cAAc;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEtC,IAAI,CAACP,IAAI,EACP,oBAAOL,OAAA,CAACL,QAAQ;IAACkB,EAAE,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAEP;IAAS,CAAE;IAACQ,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEpE,IAAIT,YAAY,IAAIG,IAAI,KAAK,OAAO,EAClC,oBAAON,OAAA,CAACL,QAAQ;IAACkB,EAAE,EAAC,eAAe;IAACG,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEhD,IAAI,CAACT,YAAY,IAAIG,IAAI,KAAK,YAAY,EACxC,oBAAON,OAAA,CAACL,QAAQ;IAACkB,EAAE,EAAC,gBAAgB;IAACG,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;;EAEnD,OAAOV,QAAQ;AACjB;AAACE,EAAA,CAhBuBH,cAAc;EAAA,QACJJ,OAAO,EACtBD,WAAW;AAAA;AAAAqB,EAAA,GAFNhB,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}