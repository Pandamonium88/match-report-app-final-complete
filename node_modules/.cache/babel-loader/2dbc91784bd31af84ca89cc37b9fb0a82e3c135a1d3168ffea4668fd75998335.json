{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UploadDraw.jsx\",\n  _s = $RefreshSig$();\n// UploadDraw.jsx — Updated to parse your May 2025 draw CSV correctly\n\nimport { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadDraw() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Parsing CSV...\");\n    Papa.parse(file, {\n      header: true,\n      complete: async results => {\n        const data = results.data;\n        let successCount = 0;\n        try {\n          for (let row of data) {\n            if (!row.date || !row.time || !row.court || !row.division || !row.teams || !row.umpire) continue;\n            const match = {\n              date: Timestamp.fromDate(new Date(row.date)),\n              time: row.time,\n              court: row.court,\n              division: row.division,\n              teams: row.teams,\n              umpire: row.umpire.trim()\n            };\n            await addDoc(collection(db, \"matches\"), match);\n            successCount++;\n          }\n          setStatus(`✅ Uploaded ${successCount} matches.`);\n        } catch (err) {\n          console.error(err);\n          setStatus(\"❌ Error during upload.\");\n        }\n      },\n      error: error => {\n        console.error(\"CSV Parse Error:\", error);\n        setStatus(\"❌ Failed to parse CSV.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"Upload Match Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: e => setFile(e.target.files[0]),\n      className: \"mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2 text-sm text-gray-700 dark:text-gray-200\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadDraw, \"xcl1XgxsiObUXPyMMkU2tcbQBJo=\");\n_c = UploadDraw;\nvar _c;\n$RefreshReg$(_c, \"UploadDraw\");","map":{"version":3,"names":["useState","Papa","collection","addDoc","Timestamp","db","jsxDEV","_jsxDEV","UploadDraw","_s","file","setFile","status","setStatus","handleUpload","parse","header","complete","results","data","successCount","row","date","time","court","division","teams","umpire","match","fromDate","Date","trim","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["/Users/andrewhall-villiers/Downloads/match-report-app-final-complete/src/pages/UploadDraw.jsx"],"sourcesContent":["// UploadDraw.jsx — Updated to parse your May 2025 draw CSV correctly\n\nimport { useState } from \"react\";\nimport Papa from \"papaparse\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nexport default function UploadDraw() {\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n\n  const handleUpload = async () => {\n    if (!file) return;\n    setStatus(\"Parsing CSV...\");\n\n    Papa.parse(file, {\n      header: true,\n      complete: async (results) => {\n        const data = results.data;\n        let successCount = 0;\n        try {\n          for (let row of data) {\n            if (!row.date || !row.time || !row.court || !row.division || !row.teams || !row.umpire) continue;\n\n            const match = {\n              date: Timestamp.fromDate(new Date(row.date)),\n              time: row.time,\n              court: row.court,\n              division: row.division,\n              teams: row.teams,\n              umpire: row.umpire.trim(),\n            };\n\n            await addDoc(collection(db, \"matches\"), match);\n            successCount++;\n          }\n          setStatus(`✅ Uploaded ${successCount} matches.`);\n        } catch (err) {\n          console.error(err);\n          setStatus(\"❌ Error during upload.\");\n        }\n      },\n      error: (error) => {\n        console.error(\"CSV Parse Error:\", error);\n        setStatus(\"❌ Failed to parse CSV.\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-2\">Upload Match Draw</h2>\n      <input type=\"file\" accept=\".csv\" onChange={(e) => setFile(e.target.files[0])} className=\"mb-2\" />\n      <button\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n        onClick={handleUpload}\n      >\n        Upload\n      </button>\n      <p className=\"mt-2 text-sm text-gray-700 dark:text-gray-200\">{status}</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}