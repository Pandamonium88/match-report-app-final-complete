{"version":3,"file":"static/js/830.37033368.chunk.js","mappings":"gMAMe,SAASA,IACtB,MAAQC,KAAMC,IAAoBC,EAAAA,EAAAA,MAC3BC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,GAEjCG,EAAQ,CAAC,QAAS,SAAU,OAAQ,eAE1CC,EAAAA,EAAAA,YAAU,KAQgB,UAApBR,GAPeS,WACjB,MACMC,SADaC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,WACxBC,KAAKC,KAAKC,IAAG,CAAQC,GAAID,EAAIC,MAAOD,EAAIE,WAC1Df,EAASO,GACTJ,GAAW,EAAM,EAIjBa,EACF,GACC,CAACnB,IAUJ,MAAwB,UAApBA,GACKoB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,MAAKC,SAAC,oBAI1BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,SAAC,iBACtCjB,GACCe,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sBAEHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,6DAA4DC,SAAA,EAC3EF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,+BAA8BC,UAC7CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,UAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,WAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,cAC9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,eAGlCF,EAAAA,EAAAA,KAAA,SAAAE,SACGpB,EAAMa,KAAKS,IACVD,EAAAA,EAAAA,MAAA,MAAeF,UAAU,gDAA+CC,SAAA,EACtEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEC,WAAa,OACpCL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEE,UAAY,OACnCN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEG,OAAS,OAChCP,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEI,OAAS,OAChCR,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEK,OAAS,OAChCT,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SAAEE,EAAEM,UAAY,OACnCV,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,UACjBF,EAAAA,EAAAA,KAAA,UACEW,MAAOP,EAAEzB,KACTiC,SAAWC,GA3CNxB,OAAOyB,EAAQC,KACtC,MAAMC,GAAMpB,EAAAA,EAAAA,IAAIH,EAAAA,GAAI,QAASqB,SACvBG,EAAAA,EAAAA,IAAUD,EAAK,CAAErC,KAAMoC,IAC7BhC,GAAUmC,GACRA,EAAKvB,KAAKS,GAAOA,EAAEP,KAAOiB,EAAS,IAAKV,EAAGzB,KAAMoC,GAAYX,KAC9D,EAsCkCe,CAAiBf,EAAEP,GAAIgB,EAAEO,OAAOT,OACjDV,UAAU,sEAAqEC,SAE9Ef,EAAMQ,KAAK0B,IACVrB,EAAAA,EAAAA,KAAA,UAAgBW,MAAOU,EAAEnB,SACtBmB,GADUA,WAdZjB,EAAEP,eA4B3B,C","sources":["pages/AdminUsers.jsx"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport { collection, getDocs, updateDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useAuth } from \"../context/AuthContext\";\n\nexport default function AdminUsers() {\n  const { role: currentUserRole } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const roles = [\"admin\", \"umpire\", \"team\", \"unassigned\"];\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const snap = await getDocs(collection(db, \"users\"));\n      const list = snap.docs.map((doc) => ({ id: doc.id, ...doc.data() }));\n      setUsers(list);\n      setLoading(false);\n    };\n\n    if (currentUserRole === \"admin\") {\n      fetchUsers();\n    }\n  }, [currentUserRole]);\n\n  const handleRoleChange = async (userId, newRole) => {\n    const ref = doc(db, \"users\", userId);\n    await updateDoc(ref, { role: newRole });\n    setUsers((prev) =>\n      prev.map((u) => (u.id === userId ? { ...u, role: newRole } : u))\n    );\n  };\n\n  if (currentUserRole !== \"admin\") {\n    return <p className=\"p-4\">Access denied.</p>;\n  }\n\n  return (\n    <div className=\"p-4 max-w-7xl mx-auto\">\n      <h2 className=\"text-xl font-bold mb-4\">Manage Users</h2>\n      {loading ? (\n        <p>Loading users...</p>\n      ) : (\n        <div className=\"overflow-auto\">\n          <table className=\"w-full border border-gray-300 dark:border-gray-600 text-sm\">\n            <thead className=\"bg-gray-100 dark:bg-gray-700\">\n              <tr>\n                <th className=\"p-2 text-left\">First</th>\n                <th className=\"p-2 text-left\">Last</th>\n                <th className=\"p-2 text-left\">Email</th>\n                <th className=\"p-2 text-left\">Phone</th>\n                <th className=\"p-2 text-left\">State</th>\n                <th className=\"p-2 text-left\">Position</th>\n                <th className=\"p-2 text-left\">Role</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map((u) => (\n                <tr key={u.id} className=\"border-t border-gray-200 dark:border-gray-700\">\n                  <td className=\"p-2\">{u.firstName || \"-\"}</td>\n                  <td className=\"p-2\">{u.lastName || \"-\"}</td>\n                  <td className=\"p-2\">{u.email || \"-\"}</td>\n                  <td className=\"p-2\">{u.phone || \"-\"}</td>\n                  <td className=\"p-2\">{u.state || \"-\"}</td>\n                  <td className=\"p-2\">{u.position || \"-\"}</td>\n                  <td className=\"p-2\">\n                    <select\n                      value={u.role}\n                      onChange={(e) => handleRoleChange(u.id, e.target.value)}\n                      className=\"p-1 rounded border border-gray-300 dark:bg-gray-800 dark:text-white\"\n                    >\n                      {roles.map((r) => (\n                        <option key={r} value={r}>\n                          {r}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["AdminUsers","role","currentUserRole","useAuth","users","setUsers","useState","loading","setLoading","roles","useEffect","async","list","getDocs","collection","db","docs","map","doc","id","data","fetchUsers","_jsx","className","children","_jsxs","u","firstName","lastName","email","phone","state","position","value","onChange","e","userId","newRole","ref","updateDoc","prev","handleRoleChange","target","r"],"sourceRoot":""}